generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Commands {
  Name     String  @unique @db.VarChar(16)
  Disabled Boolean @default(false)
  Info     String  @db.LongText
  id       Int     @id @default(autoincrement())
}

model VCMembers {
  UserID        String        @db.VarChar(18)
  ChannelID     String        @db.VarChar(18)
  Created       DateTime      @default(now()) @db.Timestamp(0)
  VoiceChannels VoiceChannels @relation(fields: [ChannelID], references: [ChannelID])

  @@id([ChannelID, UserID])
}

model VoiceChannels {
  UserID     String?     @unique @db.VarChar(18)
  ChannelID  String      @id @db.VarChar(18)
  LastUpdate DateTime?   @default(now()) @db.Timestamp(0)
  Open       Boolean     @default(true)
  GuildID    String      @db.VarChar(18)
  Settings   Settings    @relation(fields: [GuildID], references: [GuildID])
  VCMembers  VCMembers[]

  @@index([GuildID], name: "VoiceChannels_FK")
}

model Warnings {
  UserID   String   @db.VarChar(18)
  Reason   String?  @db.Text
  Created  DateTime @default(now()) @db.Timestamp(0)
  GuildID  String   @db.VarChar(18)
  ModID    String   @db.VarChar(18)
  ID       Int      @id @default(autoincrement())
  Settings Settings @relation(fields: [GuildID], references: [GuildID])

  @@index([GuildID], name: "Warnings_FK")
}

model Whitelist {
  UserID    String   @unique @db.VarChar(18)
  UUID      String   @unique @db.VarChar(32)
  Created   DateTime @default(now()) @db.Timestamp(0)
  Permanent Boolean  @default(false)
  Expired   Boolean  @default(false)
  GuildID   String   @db.VarChar(18)
  Settings  Settings @relation(fields: [GuildID], references: [GuildID])

  @@index([GuildID], name: "Whitelist_FK")
}

model Settings {
  GuildID       String          @id @db.VarChar(18)
  Created       DateTime        @default(now()) @db.Timestamp(0)
  LogChannel    String?         @db.VarChar(18)
  Logs          Logs[]
  VoiceChannels VoiceChannels[]
  Warnings      Warnings[]
  Whitelist     Whitelist[]
}

model Logs {
  ID       Int        @id @default(autoincrement())
  Created  DateTime   @default(now()) @db.Timestamp(0)
  UserID   String?    @db.VarChar(18)
  GuildID  String     @db.VarChar(18)
  ModID    String?    @db.VarChar(18)
  Event    Logs_Event
  Content  String?    @db.VarChar(256)
  Settings Settings   @relation(fields: [GuildID], references: [GuildID])

  @@index([GuildID], name: "Logs_FK")
}

enum Logs_Event {
  Whitelist_Add
  Whitelist_Remove
  Guild_Add
  Guild_Remove
  Ban
  Unban
  Kick
  Warn_Add
  Warn_Remove
  Message_Delete
  Message_Update
  Member_Join
  Member_Leave
  Room_Host
  Room_Disband
}
